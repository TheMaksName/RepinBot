import asyncio

from aiogram import Bot, Dispatcher

from app.bot.handlers.news_channel import news_channel_router
from app.bot.middlewares.db import DataBaseSession

from app.database.engine import create_db, drop_db, session_maker

from app.bot.handlers.admin_private import admin_private_router
from app.bot.handlers.user_private import user_private_router



from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import BotCommandScopeAllPrivateChats, Message
from sqlalchemy.ext.asyncio import AsyncSession

from app.bot.FSM.FSM_user_private import User_MainStates
from app.bot.FSM.FSM_admin_private import Admin_MainStates

from config import settings

from app.database.orm_query import orm_Check_avail_user, orm_AddUser, orm_Check_register_user, orm_get_all_user
from app.kbds import reply
from app.kbds.reply import admin_kb

from app.bot.common.bot_cmds_list import private
# ALLOWED_UPDATES = ['message', 'callback_query']

bot = Bot(token=settings.BOT_TOKEN)


dp = Dispatcher()


async def on_startup(bot):
    run_param = False
    if run_param:
        await drop_db()
    await create_db()

async def on_shutdown(bot):

    print('–ë–æ—Ç –ª–µ–≥')



dp.include_router(user_private_router)
# dp.include_router(admin_private_router)
dp.include_router(news_channel_router)

@dp.message(CommandStart())
async def start(message: Message, state: FSMContext, session: AsyncSession):
    try:
        if not await orm_Check_avail_user(session, message.from_user.id):
            info_user = dict()
            info_user['user_id'] = message.from_user.id
            info_user['nickname'] = message.from_user.username or '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
            await orm_AddUser(session, info_user)

        if settings.PROD:
            user_name = await orm_Check_register_user(session, message.from_user.id)
            if not user_name:

                await message.answer("–ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –ü–æ—è–≤–∏—Ç—Å—è –ø–æ–∑–∂–µ...",
                                     reply_markup=reply.start_kb_prod)
            else:
                await state.set_state(User_MainStates.after_registration)
                await message.answer(f"–ü—Ä–∏–≤–µ—Ç {user_name.split(" ")[1]}, –¥–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª–∏—Å—å", reply_markup=reply.menu_kb)

        else:
            await state.set_state(User_MainStates.before_registration)

            await message.answer("""
üì¢ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –∫–æ–Ω–∫—É—Ä—Å–∞ ¬´–†–ï–ü–ò–ù –ù–ê–®!¬ª
üîπ –ü–æ—á–µ–º—É –≤—ã –∑–¥–µ—Å—å?
–¢—ã, –Ω–∞–≤–µ—Ä–Ω–æ–µ, —Å–ª—ã—à–∞–ª –ø—Ä–æ –ò–ª—å—é –†–µ–ø–∏–Ω–∞ ‚Äî –≤–µ–ª–∏–∫–æ–≥–æ —Ö—É–¥–æ–∂–Ω–∏–∫–∞, –∞–≤—Ç–æ—Ä–∞ ¬´–ë—É—Ä–ª–∞–∫–æ–≤ –Ω–∞ –í–æ–ª–≥–µ¬ª. –ù–æ –≤–æ—Ç —Å—Ç—Ä–∞–Ω–Ω–æ—Å—Ç—å: –≤ —Ñ–∏–Ω—Å–∫–æ–º –º—É–∑–µ–µ ¬´–ê—Ç–µ–Ω–µ—É–º¬ª –≤–¥—Ä—É–≥ —Ä–µ—à–∏–ª–∏, —á—Ç–æ –†–µ–ø–∏–Ω ‚Äî –Ω–µ —Ä—É—Å—Å–∫–∏–π —Ö—É–¥–æ–∂–Ω–∏–∫, –∞ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π. –ö–∞–∫ —Ç–∞–∫? –í–µ–¥—å –æ–Ω —Å–∞–º –ø–∏—Å–∞–ª, —á—Ç–æ –µ–≥–æ –≤–¥–æ—Ö–Ω–æ–≤–∏–ª–∞ —Ä—É—Å—Å–∫–∞—è –í–æ–ª–≥–∞, —á—Ç–æ –æ–Ω —É–≤–∏–¥–µ–ª –≤ –±—É—Ä–ª–∞–∫–∞—Ö —Å–∏–ª—É –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞—Ä–æ–¥–∞!
–ß—Ç–æ –º—ã –±—É–¥–µ–º —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å? –û—Ç–≤–µ—Ç –ø—Ä–æ—Å—Ç–æ–π: –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –†–µ–ø–∏–Ω ‚Äì –Ω–∞—à!
üîπ –ó–∞—á–µ–º —ç—Ç–æ—Ç –∫–æ–Ω–∫—É—Ä—Å?
–ú—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –±—É–¥–µ–º –≥–æ–≤–æ—Ä–∏—Ç—å, –∞ –¥–æ–∫–∞–∂–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫—É—é –ø—Ä–∞–≤–¥—É —á–µ—Ä–µ–∑ —Ü–∏—Ñ—Ä–æ–≤–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ. –¢—ã —Å–º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é –≤—ã—Å—Ç–∞–≤–∫—É, –≥–¥–µ —Ä–∞—Å—Å–∫–∞–∂–µ—à—å –æ –†–µ–ø–∏–Ω–µ –∏ –µ–≥–æ —Å–≤—è–∑–∏ —Å –°–∞–º–∞—Ä–æ–π, –í–æ–ª–≥–æ–π, –±—É—Ä–ª–∞–∫–∞–º–∏, —Ä—É—Å—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–æ–π. –≠—Ç–æ —Ç–≤–æ–π —à–∞–Ω—Å —Å—Ç–∞—Ç—å —Ö—É–¥–æ–∂–Ω–∏–∫–æ–º, –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–º –∏ —Ä–∞—Å—Å–∫–∞–∑—á–∏–∫–æ–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ!
üîπ –¢—ã —Ç–æ—á–Ω–æ —Å–ø—Ä–∞–≤–∏—à—å—Å—è!
–ú—ã –≤–µ—Ä–∏–º –≤ —Ç–µ–±—è! –£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –≤—Å—ë, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∫—Ä—É—Ç–æ–π –ø—Ä–æ–µ–∫—Ç:
‚úÖ –ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏ ‚Äì –ª—É—á—à–∏–µ —ç–∫—Å–ø–µ—Ä—Ç—ã –ø–æ–º–æ–≥—É—Ç –∏ –ø–æ–¥—Å–∫–∞–∂—É—Ç.
‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã ‚Äì –≤—Å—è –Ω—É–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –†–µ–ø–∏–Ω–µ, –°–∞–º–∞—Ä–µ –∏ –∏—Å—Ç–æ—Ä–∏–∏ –µ—Å—Ç—å –≤ —ç—Ç–æ–º –±–æ—Ç–µ.
‚úÖ –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ‚Äì –º—ã –±—É–¥–µ–º –≤–µ—Å—Ç–∏ —Ç–µ–±—è –æ—Ç –≤—ã–±–æ—Ä–∞ –∏–¥–µ–∏ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã—Å—Ç–∞–≤–∫–∏.
‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ ‚Äì —Ç—ã –ø–æ–ø—Ä–æ–±—É–µ—à—å 3D-–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã.
üîπ –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?
üí° –ü—Ä–æ—á–∏—Ç–∞–π —É—Å–ª–æ–≤–∏—è –∫–æ–Ω–∫—É—Ä—Å–∞.
üí° –í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ç–µ–º—É ‚Äì —Ç–µ–±—è –∂–¥—ë—Ç 30 –∏–¥–µ–π!
üí° –°–ª–µ–¥–∏ –∑–∞ –Ω–∞—à–∏–º–∏ –ø–æ—Å—Ç–∞–º–∏ ‚Äì –º—ã —Ä–∞—Å—Å–∫–∞–∂–µ–º, –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å –≤—ã—Å—Ç–∞–≤–∫—É —à–∞–≥ –∑–∞ —à–∞–≥–æ–º.
üì¢ –†–µ–ø–∏–Ω –Ω–∞—à! –°–∞–º–∞—Ä–∞ ‚Äì –µ–≥–æ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ! –ê —Ç—ã ‚Äì —Ç–æ—Ç, –∫—Ç–æ –ø–æ–∫–∞–∂–µ—Ç —ç—Ç–æ –º–∏—Ä—É! üöÄ
            """, reply_markup=reply.start_kb_not_prod)


    except Exception as e:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")

@user_private_router.message(Command('menu'))
async def menu(message: Message):
    await message.answer("–û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é...", reply_markup=reply.menu_kb)

async def main():

    dp.startup.register(on_startup)
    dp.shutdown.register(on_shutdown)

    dp.update.middleware(DataBaseSession(session_pool=session_maker))
    await bot.delete_webhook(drop_pending_updates=True)
    # await bot.delete_my_commands(scope=BotCommandScopeAllPrivateChats())
    await bot.set_my_commands(commands=private, scope=BotCommandScopeAllPrivateChats())
    await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())

asyncio.run(main())

